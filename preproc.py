# Imports
import numpy as np

# Subroutines
def population_select(type, m, fem):

    if type == 'random':
        pop = np.random.randint(low=0,high=2,size=(m,fem.nely,fem.nelx))
    elif type == 'solid':
        pop = np.ones((m,fem.nely,fem.nelx))
    elif type == 'paperopt':
        pop = [[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
                [0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
                [0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0],
                [0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0],
                [0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1],
                [0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1],
                [0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,1,1,1,0],
                [0,0,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,1,1,1,0,0],
                [0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
                [1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]
        pop = np.array(pop) #only to be used when nelx,nely=24,12
        pop = np.repeat(pop[np.newaxis,:,:],m,axis=0)
    elif type == 'tri':
        pop = [[1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],
                [1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],
                [1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0],
                [1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0]]
        pop = np.array(pop)
        pop = np.repeat(pop[np.newaxis,:,:],m,axis=0)
    elif type == 'multicase':
        # pop1 = np.array([[1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],
        #         [0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],
        #         [0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        #         [0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0],
        #         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
        #         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
        #         [0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0],
        #         [0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        #         [0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],
        #         [0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0]])
        pop1 = np.ones((5,fem.nely,fem.nelx))
        # pop2 =  np.array([[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
        #         [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0],
        #         [1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0],
        #         [0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,1,0,0],
        #         [0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1],
        #         [0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1],
        #         [0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,1,0,0],
        #         [1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0],
        #         [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0],
        #         [1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0]])
        #pop = np.concatenate((pop1[np.newaxis,:,:],pop2[np.newaxis,:,:],np.random.randint(low=0,high=2,size=(m-2,fem.nely,fem.nelx))))
        pop = np.concatenate((pop1,np.random.randint(low=0,high=2,size=(m-5,fem.nely,fem.nelx))), axis=0)
    elif type == 'hollow_tri':
        pop = [[1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
                [0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
                [0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0],
                [0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
                [0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],
                [0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0]]
        pop = np.array(pop)
        pop = np.repeat(pop[np.newaxis,:,:],m,axis=0)
    elif type == '99opt':
        pop = [[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
                [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0],
                [1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0],
                [0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,1,0,0],
                [0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1],
                [0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1],
                [0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,1,0,0],
                [1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0],
                [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0]]
        pop = np.array(pop)
        pop = np.repeat(pop[np.newaxis,:,:],m,axis=0)
    
    return pop